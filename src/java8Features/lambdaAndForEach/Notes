/*
	  Lambda expressions better way to represent one method interface using an expression. 
	 It is very useful in collection library. It helps to iterate, filter and extract data from collection.
      - provide the implementation of an interface which has functional interface.
      - we don't need to define the method again for providing the implementation. we just write the implementation code.
      - is a short hand notation for the anonymous inner class.
	- Java lambda expression is treated as a function, so compiler does not create .class file.

	Functional Interface
      	Lambda expression provides implementation of functional interface. 

	Adv:
		To provide the implementation of Functional interface. 
		Less coding.
		
		*
		*usage: (argument-list) -> {body}  
		*
		* */
		
anonymous : interface that has any number of methods
Lambda : interface that has only one method
	
Lambda:
----------------------	
  allows functional programming.
  readable and concise code
  easier to use APIs and libs.
  enables support for parallel processing.
  used along with functional interfaces.[Lambda expression provides implementation of functional interface]
  simplified version for anonymous inner class.
  
  
  
  
 Service.java:
---------------------------------------
public interface Service {
	public void process();
}



Req:
call the process method and Print HI
call the process method and Print hello
call the process method and Print welcome


solution:
1.anonymous inner class
OR
2.Lambda expressions
 
 