Threads:
------------------------
	  threading is used for parallel programming. 
	 [ Parallel programming means Executing multiple programs at the time]
	  
	  advantage of thread:
	  ------------------------------------------
	  -response time is improved
	  -utilization of resources
	  
	  Thread:
	  -thread is a single unit created under the process
	  -every thread has its own line of execution
	  -every thread is independent
	  
	  Process:
	  -ex:eclipse, intellij, pycharm, skype, chrome are processes
	  -every process requires separate memory
	  -a thread is a single unit under a process
	  -every thread does not require separate memory
	  -all the threads share the same memory which is allocated for the process
	  
	  when should we use thread?
	  -----------------------------------
	  -when the tasks are independent of each other, 
	  i.e.the output of one task is not required for the another task
	  - TEST the application in multiple browsers
	  - Test multiple modules of application.
	  

	  Thread Nature:
	  ----------------------
	  -when the thread is created it would not start immediately, because it is decided
	  by the cpu
	  - we cannot determine when the thread would start or end.
	  - By default java creates main thread.
	  -	using main thread developer will create additional threads.
		
	  

 
 How to create a thread:
--------------------------------------------------------
1. create the thread class [ two ways of creating thread class]
2. provide run method 
	  - contain the thread activity
    - run method specifies what the thread has to do.
3. create the thread object inside the thread class
4. call the start method
	  -thread will be in ready state
	   - start method() - internally  calls the run method when the cpu is available.
	  



How to create a thread class:
--------------------------------------------
There are two ways:
1. By extending the Thread class
2. By implementing the "Runnable" interface.


  
create the thread class:
----------------------------
1. create a class extending Thread class and provide run method
    	public class MyThread extends Thread {
			public void run() {
				System.out.println("Hi");
			}
		}

2A.create a class implements Runnable interface and provide run method
      public class MyThread implements Runnable {
			public void run() {
			System.out.println("Hi");
			}
		}

2B. Using anonymous inner class

      Runnable r3 = new Runnable() {
			public void run() {
				System.out.println"Hi");
			}
		};
		
    2C.Using lambda expressions: 

    	Runnable r2 = () ->{
			System.out.println("Hi");
		};
		
    
	 */
	 
	 thread states:
	  --------------------------
	  1. ready state -- when the developer creates the thread and adds to the cpu job list
	  2. running -- when cpu gives appointment to the thread
	  3. possible 3 states after running state
	  		a. dead state or completed state
	  		b. wait state : we don't know the time
	  		c. sleep state : we will know for how long it is going to know sleep
	  



	 thread props:
	 -----------------
	 every thread has thread name and thread priority
	 
	 Get current thread name:
	 -------------------------------------
	 System.out.println(Thread.currentThread()
	 
	 
	 - How to make the thread to sleep:
	 Thread.sleep(5000); // sleeps for 5 seconds
	 
	 
	 - main thread has to wait until the other threads compltes the execution?
	 use join() funtion
	 
	 
	  1. ready state -- th.start()
	  2. running -- when cpu gives appointment to the thread, run() method is called.
	  3. possible 3 states after running state
	  		a. dead state or completed state    - run() method execution is complted 
	  		b. wait state :   th1.join() --> main thread will wait for th1 to complte
	  		c. sleep state : Thread.sleep(5000);
        
        
        
        
	 